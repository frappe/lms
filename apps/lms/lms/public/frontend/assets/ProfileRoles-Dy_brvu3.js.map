{"version":3,"file":"ProfileRoles-Dy_brvu3.js","sources":["../../../../frontend/src/pages/ProfileRoles.vue"],"sourcesContent":["<template>\n\t<div class=\"mt-7\">\n\t\t<h2 class=\"mb-3 text-lg font-semibold text-ink-gray-9\">\n\t\t\t{{ __('Settings') }}\n\t\t</h2>\n\t\t<div\n\t\t\tv-if=\"readOnlyMode\"\n\t\t\tclass=\"flex items-center space-x-2 text-sm text-ink-gray-7 bg-surface-gray-1 px-3 py-2 rounded-md w-full text-center\"\n\t\t>\n\t\t\t<CircleAlert class=\"size-4 stroke-1.5\" />\n\t\t\t<span>\n\t\t\t\t{{ __('You cannot change the roles in read-only mode.') }}\n\t\t\t</span>\n\t\t</div>\n\t\t<div\n\t\t\tv-else\n\t\t\tclass=\"flex flex-col md:flex-row gap-4 md:gap-0 justify-between w-3/4 mt-5\"\n\t\t>\n\t\t\t<FormControl\n\t\t\t\t:label=\"__('Moderator')\"\n\t\t\t\tv-model=\"moderator\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\t@change.stop=\"changeRole('moderator')\"\n\t\t\t/>\n\t\t\t<FormControl\n\t\t\t\t:label=\"__('Course Creator')\"\n\t\t\t\tv-model=\"course_creator\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\t@change.stop=\"changeRole('course_creator')\"\n\t\t\t/>\n\t\t\t<FormControl\n\t\t\t\t:label=\"__('Evaluator')\"\n\t\t\t\tv-model=\"batch_evaluator\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\t@change.stop=\"changeRole('batch_evaluator')\"\n\t\t\t/>\n\t\t\t<FormControl\n\t\t\t\t:label=\"__('Student')\"\n\t\t\t\tv-model=\"lms_student\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\t@change.stop=\"changeRole('lms_student')\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n<script setup>\nimport { FormControl, createResource, toast } from 'frappe-ui'\nimport { ref } from 'vue'\nimport { convertToTitleCase } from '@/utils'\nimport { CircleAlert } from 'lucide-vue-next'\n\nconst moderator = ref(false)\nconst course_creator = ref(false)\nconst batch_evaluator = ref(false)\nconst lms_student = ref(false)\nconst readOnlyMode = window.read_only_mode\n\nconst props = defineProps({\n\tprofile: {\n\t\ttype: Object,\n\t\trequired: true,\n\t},\n})\n\nconst roles = createResource({\n\turl: 'lms.lms.utils.get_roles',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tname: props.profile.data?.name,\n\t\t}\n\t},\n\tauto: true,\n\tonSuccess(data) {\n\t\tlet roles = [\n\t\t\t'moderator',\n\t\t\t'course_creator',\n\t\t\t'batch_evaluator',\n\t\t\t'lms_student',\n\t\t]\n\t\tfor (let role of roles) {\n\t\t\tif (data[role]) eval(role).value = true\n\t\t}\n\t},\n})\n\nconst updateRole = createResource({\n\turl: 'lms.lms.api.save_role',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tuser: props.profile.data?.name,\n\t\t\trole: values.role,\n\t\t\tvalue: values.value,\n\t\t}\n\t},\n})\n\nconst changeRole = (role) => {\n\tupdateRole.submit(\n\t\t{\n\t\t\trole: convertToTitleCase(role.split('_').join(' ')),\n\t\t\tvalue: eval(role).value,\n\t\t},\n\t\t{\n\t\t\tonSuccess(data) {\n\t\t\t\ttoast.success(__('Role updated successfully'))\n\t\t\t},\n\t\t}\n\t)\n}\n</script>\n"],"names":["values","_a","data"],"mappings":"wqBAmDA,MAAM,UAAY,IAAI,EAAK,EACrB,eAAiB,IAAI,EAAK,EAC1B,gBAAkB,IAAI,EAAK,EAC3B,YAAc,IAAI,EAAK,EACvB,aAAe,OAAO,eAEtB,MAAQ,QAOA,eAAe,CAC5B,IAAK,0BACL,WAAWA,EAAQ,OAClB,MAAO,CACN,MAAMC,EAAA,MAAM,QAAQ,OAAd,YAAAA,EAAoB,IAC7B,CACE,EACD,KAAM,GACN,UAAU,KAAM,CACf,IAAI,MAAQ,CACX,YACA,iBACA,kBACA,aACH,EACE,QAAS,QAAQ,MACZ,KAAK,IAAI,IAAG,KAAK,IAAI,EAAE,MAAQ,GAEpC,CACF,CAAC,EAED,MAAM,WAAa,eAAe,CACjC,IAAK,wBACL,WAAWD,EAAQ,OAClB,MAAO,CACN,MAAMC,EAAA,MAAM,QAAQ,OAAd,YAAAA,EAAoB,KAC1B,KAAMD,EAAO,KACb,MAAOA,EAAO,KACjB,CACE,CACF,CAAC,EAEK,WAAc,MAAS,CAC5B,WAAW,OACV,CACC,KAAM,mBAAmB,KAAK,MAAM,GAAG,EAAE,KAAK,GAAG,CAAC,EAClD,MAAO,KAAK,IAAI,EAAE,KAClB,EACD,CACC,UAAUE,EAAM,CACf,MAAM,QAAQ,GAAG,2BAA2B,CAAC,CAC7C,CACJ,CACA,CACA"}