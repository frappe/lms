{"version":3,"file":"QuizForm-BjM3vEI6.js","sources":["../../../../frontend/src/components/Modals/Question.vue","../../../../frontend/src/pages/QuizForm.vue"],"sourcesContent":["<template>\n\t<Dialog\n\t\tv-model=\"show\"\n\t\t:options=\"{\n\t\t\tsize: '3xl',\n\t\t}\"\n\t>\n\t\t<template #body>\n\t\t\t<div class=\"p-5 space-y-5\">\n\t\t\t\t<div class=\"text-lg font-semibold text-ink-gray-9 mb-5\">\n\t\t\t\t\t{{ __(props.title) }}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"!editMode\"\n\t\t\t\t\tclass=\"flex items-center text-xs text-ink-gray-7 space-x-5\"\n\t\t\t\t>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t:label=\"__('Choose an existing question')\"\n\t\t\t\t\t\tv-model=\"chooseFromExisting\"\n\t\t\t\t\t\tclass=\"!p-0\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"!chooseFromExisting || editMode\" class=\"space-y-2\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label class=\"block text-xs text-ink-gray-5 mb-1\">\n\t\t\t\t\t\t\t{{ __('Question') }}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<TextEditor\n\t\t\t\t\t\t\t:content=\"question.question\"\n\t\t\t\t\t\t\t@change=\"(val) => (question.question = val)\"\n\t\t\t\t\t\t\t:editable=\"true\"\n\t\t\t\t\t\t\t:fixedMenu=\"true\"\n\t\t\t\t\t\t\teditorClass=\"prose-sm max-w-none border-b border-x bg-surface-gray-2 rounded-b-md py-1 px-2 min-h-[7rem]\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"grid grid-cols-2 gap-4\">\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tv-model=\"question.marks\"\n\t\t\t\t\t\t\t:label=\"__('Marks')\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t:label=\"__('Type')\"\n\t\t\t\t\t\t\tv-model=\"question.type\"\n\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\t:options=\"['Choices', 'User Input', 'Open Ended']\"\n\t\t\t\t\t\t\tclass=\"pb-2\"\n\t\t\t\t\t\t\t:required=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"question.type == 'Choices'\"\n\t\t\t\t\t\tclass=\"text-base font-semibold text-ink-gray-9 mb-5 mt-5\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ __('Options') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-else-if=\"question.type == 'User Input'\"\n\t\t\t\t\t\tclass=\"text-base font-semibold text-ink-gray-9 mb-5 mt-5\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ __('Possibilities') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if=\"question.type == 'Choices'\" class=\"grid grid-cols-2 gap-4\">\n\t\t\t\t\t\t<div v-for=\"n in 4\" class=\"space-y-4 py-2\">\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t:label=\"__('Option') + ' ' + n\"\n\t\t\t\t\t\t\t\tv-model=\"question[`option_${n}`]\"\n\t\t\t\t\t\t\t\t:required=\"n <= 2 ? true : false\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t:label=\"__('Explanation')\"\n\t\t\t\t\t\t\t\tv-model=\"question[`explanation_${n}`]\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t:label=\"__('Correct Answer')\"\n\t\t\t\t\t\t\t\tv-model=\"question[`is_correct_${n}`]\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-else-if=\"question.type == 'User Input'\"\n\t\t\t\t\t\tclass=\"grid grid-cols-2 gap-4 py-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div v-for=\"n in 4\">\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t:label=\"__('Possibility') + ' ' + n\"\n\t\t\t\t\t\t\t\tv-model=\"question[`possibility_${n}`]\"\n\t\t\t\t\t\t\t\t:required=\"n == 1 ? true : false\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-else-if=\"chooseFromExisting\" class=\"space-y-2\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tv-model=\"existingQuestion.question\"\n\t\t\t\t\t\t:label=\"__('Select a question')\"\n\t\t\t\t\t\tdoctype=\"LMS Question\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tv-model=\"existingQuestion.marks\"\n\t\t\t\t\t\t:label=\"__('Marks')\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex items-center justify-end space-x-2 mt-5\">\n\t\t\t\t\t<Button variant=\"solid\" @click=\"submitQuestion()\">\n\t\t\t\t\t\t{{ __('Submit') }}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</Dialog>\n</template>\n<script setup>\nimport {\n\tDialog,\n\tFormControl,\n\tTextEditor,\n\tcreateResource,\n\tSwitch,\n\tButton,\n\ttoast,\n} from 'frappe-ui'\nimport { computed, watch, reactive, ref, inject } from 'vue'\nimport Link from '@/components/Controls/Link.vue'\nimport { useOnboarding } from 'frappe-ui/frappe'\n\nconst show = defineModel()\nconst quiz = defineModel('quiz')\nconst chooseFromExisting = ref(false)\nconst editMode = ref(false)\nconst user = inject('$user')\nconst { updateOnboardingStep } = useOnboarding('learning')\n\nconst existingQuestion = reactive({\n\tquestion: '',\n\tmarks: 1,\n})\nconst question = reactive({\n\tquestion: '',\n\ttype: 'Choices',\n\tmarks: 1,\n})\n\nconst populateFields = () => {\n\tlet fields = ['option', 'is_correct', 'explanation', 'possibility']\n\tlet counter = 1\n\tfields.forEach((field) => {\n\t\twhile (counter <= 4) {\n\t\t\tquestion[`${field}_${counter}`] = field === 'is_correct' ? false : null\n\t\t\tcounter++\n\t\t}\n\t})\n}\n\npopulateFields()\n\nconst props = defineProps({\n\ttitle: {\n\t\ttype: String,\n\t\tdefault: __('Add a new question'),\n\t},\n\tquestionDetail: {\n\t\ttype: [Object, null],\n\t\trequired: true,\n\t},\n})\n\nconst questionData = createResource({\n\turl: 'frappe.client.get',\n\tmakeParams() {\n\t\treturn {\n\t\t\tdoctype: 'LMS Question',\n\t\t\tname: props.questionDetail.question,\n\t\t}\n\t},\n\tauto: false,\n\tonSuccess(data) {\n\t\tlet counter = 1\n\t\teditMode.value = true\n\t\tObject.keys(data).forEach((key) => {\n\t\t\tif (Object.hasOwn(question, key)) question[key] = data[key]\n\t\t})\n\t\twhile (counter <= 4) {\n\t\t\tquestion[`is_correct_${counter}`] = data[`is_correct_${counter}`]\n\t\t\t\t? true\n\t\t\t\t: false\n\t\t\tcounter++\n\t\t}\n\t\tquestion.marks = props.questionDetail.marks\n\t},\n})\n\nwatch(show, () => {\n\tif (show.value) {\n\t\teditMode.value = false\n\t\tif (props.questionDetail.question) questionData.fetch()\n\t\telse {\n\t\t\tquestion.question = ''\n\t\t\tquestion.marks = 1\n\t\t\tquestion.type = 'Choices'\n\t\t\texistingQuestion.question = ''\n\t\t\texistingQuestion.marks = 1\n\t\t\tchooseFromExisting.value = false\n\t\t\tpopulateFields()\n\t\t}\n\n\t\tif (props.questionDetail.marks) question.marks = props.questionDetail.marks\n\t}\n})\n\nconst questionRow = createResource({\n\turl: 'frappe.client.insert',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoc: {\n\t\t\t\tdoctype: 'LMS Quiz Question',\n\t\t\t\tparent: quiz.value.data.name,\n\t\t\t\tparentfield: 'questions',\n\t\t\t\tparenttype: 'LMS Quiz',\n\t\t\t\t...values,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst questionCreation = createResource({\n\turl: 'frappe.client.insert',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoc: {\n\t\t\t\tdoctype: 'LMS Question',\n\t\t\t\t...question,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst submitQuestion = () => {\n\tif (props.questionDetail?.question) updateQuestion()\n\telse addQuestion()\n}\n\nconst addQuestion = () => {\n\tif (chooseFromExisting.value) {\n\t\taddQuestionRow({\n\t\t\tquestion: existingQuestion.question,\n\t\t\tmarks: existingQuestion.marks,\n\t\t})\n\t} else {\n\t\tquestionCreation.submit(\n\t\t\t{},\n\t\t\t{\n\t\t\t\tonSuccess(data) {\n\t\t\t\t\taddQuestionRow({\n\t\t\t\t\t\tquestion: data.name,\n\t\t\t\t\t\tmarks: question.marks,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tonError(err) {\n\t\t\t\t\ttoast.error(err.messages?.[0] || err)\n\t\t\t\t},\n\t\t\t}\n\t\t)\n\t}\n}\n\nconst addQuestionRow = (question) => {\n\tquestionRow.submit(\n\t\t{\n\t\t\t...question,\n\t\t},\n\t\t{\n\t\t\tonSuccess() {\n\t\t\t\tif (user.data?.is_system_manager)\n\t\t\t\t\tupdateOnboardingStep('create_first_quiz')\n\n\t\t\t\tshow.value = false\n\t\t\t\ttoast.success(__('Question added successfully'))\n\t\t\t\tquiz.value.reload()\n\t\t\t\tshow.value = false\n\t\t\t},\n\t\t\tonError(err) {\n\t\t\t\ttoast.error(err.messages?.[0] || err)\n\t\t\t\tshow.value = false\n\t\t\t},\n\t\t}\n\t)\n}\n\nconst questionUpdate = createResource({\n\turl: 'frappe.client.set_value',\n\tauto: false,\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoctype: 'LMS Question',\n\t\t\tname: questionData.data?.name,\n\t\t\tfieldname: {\n\t\t\t\t...question,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst marksUpdate = createResource({\n\turl: 'frappe.client.set_value',\n\tauto: false,\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoctype: 'LMS Quiz Question',\n\t\t\tname: props.questionDetail.name,\n\t\t\tfieldname: {\n\t\t\t\tmarks: question.marks,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst updateQuestion = () => {\n\tquestionUpdate.submit(\n\t\t{},\n\t\t{\n\t\t\tonSuccess() {\n\t\t\t\tmarksUpdate.submit(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\tonSuccess() {\n\t\t\t\t\t\t\tshow.value = false\n\t\t\t\t\t\t\ttoast.success(__('Question updated successfully'))\n\t\t\t\t\t\t\tquiz.value.reload()\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t},\n\t\t\tonError(err) {\n\t\t\t\ttoast.error(err.messages?.[0] || err)\n\t\t\t},\n\t\t}\n\t)\n}\n</script>\n<style>\ninput[type='radio']:checked {\n\tbackground-color: theme('colors.gray.900') !important;\n\tborder-color: theme('colors.gray.900') !important;\n\t--tw-ring-color: theme('colors.gray.900') !important;\n}\n</style>\n","<template>\n\t<header\n\t\tclass=\"sticky top-0 z-10 flex items-center justify-between border-b bg-surface-white px-3 py-2.5 sm:px-5\"\n\t>\n\t\t<Breadcrumbs :items=\"breadcrumbs\" />\n\t\t<div v-if=\"!readOnlyMode\" class=\"space-x-2\">\n\t\t\t<router-link\n\t\t\t\tv-if=\"quizDetails.data?.name\"\n\t\t\t\t:to=\"{\n\t\t\t\t\tname: 'QuizPage',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tquizID: quizDetails.data.name,\n\t\t\t\t\t},\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t\t<Button>\n\t\t\t\t\t{{ __('Open') }}\n\t\t\t\t</Button>\n\t\t\t</router-link>\n\t\t\t<router-link\n\t\t\t\tv-if=\"quizDetails.data?.name\"\n\t\t\t\t:to=\"{\n\t\t\t\t\tname: 'QuizSubmissionList',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tquizID: quizDetails.data.name,\n\t\t\t\t\t},\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t\t<Button>\n\t\t\t\t\t{{ __('Submission List') }}\n\t\t\t\t</Button>\n\t\t\t</router-link>\n\t\t\t<Button variant=\"solid\" @click=\"submitQuiz()\">\n\t\t\t\t{{ __('Save') }}\n\t\t\t</Button>\n\t\t</div>\n\t</header>\n\t<div class=\"w-3/4 mx-auto py-5\">\n\t\t<!-- Details -->\n\t\t<div class=\"mb-8\">\n\t\t\t<div class=\"font-semibold text-ink-gray-9 mb-4\">\n\t\t\t\t{{ __('Details') }}\n\t\t\t</div>\n\t\t\t<FormControl\n\t\t\t\tv-model=\"quiz.title\"\n\t\t\t\t:label=\"\n\t\t\t\t\tquizDetails.data?.name\n\t\t\t\t\t\t? __('Title')\n\t\t\t\t\t\t: __('Enter a title and save the quiz to proceed')\n\t\t\t\t\"\n\t\t\t\t:required=\"true\"\n\t\t\t/>\n\t\t\t<div v-if=\"quizDetails.data?.name\">\n\t\t\t\t<div class=\"grid grid-cols-2 gap-5 mt-4 mb-8\">\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tv-model=\"quiz.max_attempts\"\n\t\t\t\t\t\t:label=\"__('Maximum Attempts')\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tv-model=\"quiz.duration\"\n\t\t\t\t\t\t:label=\"__('Duration (in minutes)')\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tv-model=\"quiz.total_marks\"\n\t\t\t\t\t\t:label=\"__('Total Marks')\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t/>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tv-model=\"quiz.passing_percentage\"\n\t\t\t\t\t\t:label=\"__('Passing Percentage')\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Settings -->\n\t\t\t\t<div class=\"mb-8\">\n\t\t\t\t\t<div class=\"font-semibold text-ink-gray-9 mb-4\">\n\t\t\t\t\t\t{{ __('Settings') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"grid grid-cols-3 gap-5 my-4\">\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tv-model=\"quiz.show_answers\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t:label=\"__('Show Answers')\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tv-model=\"quiz.show_submission_history\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t:label=\"__('Show Submission History')\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"mb-8\">\n\t\t\t\t\t<div class=\"font-semibold text-ink-gray-9 mb-4\">\n\t\t\t\t\t\t{{ __('Shuffle Settings') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"grid grid-cols-3\">\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tv-model=\"quiz.shuffle_questions\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t:label=\"__('Shuffle Questions')\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tv-if=\"quiz.shuffle_questions\"\n\t\t\t\t\t\t\tv-model=\"quiz.limit_questions_to\"\n\t\t\t\t\t\t\t:label=\"__('Limit Questions To')\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Questions -->\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"flex items-center justify-between mb-4\">\n\t\t\t\t\t\t<div class=\"font-semibold text-ink-gray-9\">\n\t\t\t\t\t\t\t{{ __('Questions') }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button v-if=\"!readOnlyMode\" @click=\"openQuestionModal()\">\n\t\t\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t\t\t<Plus class=\"w-4 h-4\" />\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t{{ __('New Question') }}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ListView\n\t\t\t\t\t\t:columns=\"questionColumns\"\n\t\t\t\t\t\t:rows=\"quiz.questions\"\n\t\t\t\t\t\trow-key=\"name\"\n\t\t\t\t\t\t:options=\"{\n\t\t\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\t\t}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListHeader\n\t\t\t\t\t\t\tclass=\"mb-2 grid items-center space-x-4 rounded bg-surface-gray-2 p-2\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListHeaderItem :item=\"item\" v-for=\"item in questionColumns\" />\n\t\t\t\t\t\t</ListHeader>\n\t\t\t\t\t\t<ListRows>\n\t\t\t\t\t\t\t<ListRow\n\t\t\t\t\t\t\t\t:row=\"row\"\n\t\t\t\t\t\t\t\tv-slot=\"{ idx, column, item }\"\n\t\t\t\t\t\t\t\tv-for=\"row in quiz.questions\"\n\t\t\t\t\t\t\t\t@click=\"openQuestionModal(row)\"\n\t\t\t\t\t\t\t\tclass=\"cursor-pointer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListRowItem :item=\"item\">\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tv-if=\"column.key == 'question_detail'\"\n\t\t\t\t\t\t\t\t\t\tclass=\"text-xs truncate h-4\"\n\t\t\t\t\t\t\t\t\t\tv-html=\"item\"\n\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t<div v-else class=\"text-xs\">\n\t\t\t\t\t\t\t\t\t\t{{ item }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</ListRowItem>\n\t\t\t\t\t\t\t</ListRow>\n\t\t\t\t\t\t</ListRows>\n\t\t\t\t\t\t<ListSelectBanner>\n\t\t\t\t\t\t\t<template #actions=\"{ unselectAll, selections }\">\n\t\t\t\t\t\t\t\t<div class=\"flex gap-2\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\t\t@click=\"deleteQuestions(selections, unselectAll)\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Trash2 class=\"h-4 w-4 stroke-1.5\" />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</ListSelectBanner>\n\t\t\t\t\t</ListView>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<Question\n\t\tv-model=\"showQuestionModal\"\n\t\t:questionDetail=\"currentQuestion\"\n\t\tv-model:quiz=\"quizDetails\"\n\t\t:title=\"\n\t\t\tcurrentQuestion.question\n\t\t\t\t? __('Edit the question')\n\t\t\t\t: __('Add a new question')\n\t\t\"\n\t/>\n</template>\n<script setup>\nimport {\n\tBreadcrumbs,\n\tcreateResource,\n\tFormControl,\n\tListView,\n\tListHeader,\n\tListHeaderItem,\n\tListRows,\n\tListRow,\n\tListRowItem,\n\tListSelectBanner,\n\tButton,\n\tusePageMeta,\n\ttoast,\n} from 'frappe-ui'\nimport {\n\tcomputed,\n\treactive,\n\tref,\n\tonMounted,\n\tinject,\n\tonBeforeUnmount,\n\twatch,\n} from 'vue'\nimport { sessionStore } from '../stores/session'\nimport { Plus, Trash2 } from 'lucide-vue-next'\nimport { updateDocumentTitle } from '@/utils'\nimport { useRouter } from 'vue-router'\nimport Question from '@/components/Modals/Question.vue'\n\nconst { brand } = sessionStore()\nconst showQuestionModal = ref(false)\nconst currentQuestion = reactive({\n\tquestion: '',\n\tmarks: 0,\n\tname: '',\n})\nconst user = inject('$user')\nconst router = useRouter()\nconst readOnlyMode = window.read_only_mode\n\nconst props = defineProps({\n\tquizID: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n})\n\nconst quiz = reactive({\n\ttitle: '',\n\ttotal_marks: 0,\n\tpassing_percentage: 0,\n\tmax_attempts: 0,\n\tduration: 0,\n\tlimit_questions_to: 0,\n\tshow_answers: true,\n\tshow_submission_history: false,\n\tshuffle_questions: false,\n\tquestions: [],\n})\n\nonMounted(() => {\n\tif (\n\t\tprops.quizID == 'new' &&\n\t\t!user.data?.is_moderator &&\n\t\t!user.data?.is_instructor\n\t) {\n\t\trouter.push({ name: 'Courses' })\n\t}\n\tif (props.quizID !== 'new') {\n\t\tquizDetails.reload()\n\t}\n\twindow.addEventListener('keydown', keyboardShortcut)\n})\n\nconst keyboardShortcut = (e) => {\n\tif (e.key === 's' && (e.ctrlKey || e.metaKey)) {\n\t\tsubmitQuiz()\n\t\te.preventDefault()\n\t}\n}\n\nonBeforeUnmount(() => {\n\twindow.removeEventListener('keydown', keyboardShortcut)\n})\n\nwatch(\n\t() => props.quizID !== 'new',\n\t(newVal) => {\n\t\tif (newVal) {\n\t\t\tquizDetails.reload()\n\t\t}\n\t}\n)\n\nconst quizDetails = createResource({\n\turl: 'frappe.client.get',\n\tmakeParams(values) {\n\t\treturn { doctype: 'LMS Quiz', name: props.quizID }\n\t},\n\tauto: false,\n\tonSuccess(data) {\n\t\tObject.keys(data).forEach((key) => {\n\t\t\tif (Object.hasOwn(quiz, key)) quiz[key] = data[key]\n\t\t})\n\n\t\tlet checkboxes = [\n\t\t\t'show_answers',\n\t\t\t'show_submission_history',\n\t\t\t'shuffle_questions',\n\t\t]\n\t\tfor (let idx in checkboxes) {\n\t\t\tlet key = checkboxes[idx]\n\t\t\tquiz[key] = quiz[key] ? true : false\n\t\t}\n\t},\n})\n\nconst quizCreate = createResource({\n\turl: 'frappe.client.insert',\n\tauto: false,\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoc: {\n\t\t\t\tdoctype: 'LMS Quiz',\n\t\t\t\t...quiz,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst quizUpdate = createResource({\n\turl: 'frappe.client.set_value',\n\tauto: false,\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoctype: 'LMS Quiz',\n\t\t\tname: values.quizID,\n\t\t\tfieldname: {\n\t\t\t\ttotal_marks: calculateTotalMarks(),\n\t\t\t\t...quiz,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst submitQuiz = () => {\n\tif (quizDetails.data?.name) updateQuiz()\n\telse createQuiz()\n}\n\nconst createQuiz = () => {\n\tquizCreate.submit(\n\t\t{},\n\t\t{\n\t\t\tonSuccess(data) {\n\t\t\t\ttoast.success(__('Quiz created successfully'))\n\t\t\t\trouter.push({\n\t\t\t\t\tname: 'QuizForm',\n\t\t\t\t\tparams: { quizID: data.name },\n\t\t\t\t})\n\t\t\t},\n\t\t\tonError(err) {\n\t\t\t\ttoast.error(err.messages?.[0] || err)\n\t\t\t},\n\t\t}\n\t)\n}\n\nconst updateQuiz = () => {\n\tquizUpdate.submit(\n\t\t{ quizID: quizDetails.data?.name },\n\t\t{\n\t\t\tonSuccess(data) {\n\t\t\t\tquiz.total_marks = data.total_marks\n\t\t\t\ttoast.success(__('Quiz updated successfully'))\n\t\t\t},\n\t\t\tonError(err) {\n\t\t\t\ttoast.error(err.messages?.[0] || err)\n\t\t\t},\n\t\t}\n\t)\n}\n\nconst calculateTotalMarks = () => {\n\tlet totalMarks = 0\n\tif (quiz.limit_questions_to && quiz.questions.length > 0)\n\t\treturn quiz.questions[0].marks * quiz.limit_questions_to\n\tquiz.questions.forEach((question) => {\n\t\ttotalMarks += question.marks\n\t})\n\treturn totalMarks\n}\n\nconst questionColumns = computed(() => {\n\treturn [\n\t\t{\n\t\t\tlabel: __('ID'),\n\t\t\tkey: 'question',\n\t\t\twidth: '10rem',\n\t\t},\n\t\t{\n\t\t\tlabel: __('Question'),\n\t\t\tkey: __('question_detail'),\n\t\t\twidth: '40rem',\n\t\t},\n\t\t{\n\t\t\tlabel: __('Marks'),\n\t\t\tkey: 'marks',\n\t\t\twidth: '5rem',\n\t\t},\n\t]\n})\n\nconst openQuestionModal = (question = null) => {\n\tif (question) {\n\t\tcurrentQuestion.question = question.question\n\t\tcurrentQuestion.marks = question.marks\n\t\tcurrentQuestion.name = question.name\n\t} else {\n\t\tcurrentQuestion.question = ''\n\t\tcurrentQuestion.marks = 0\n\t\tcurrentQuestion.name = ''\n\t}\n\tshowQuestionModal.value = true\n}\n\nconst deleteQuestionResource = createResource({\n\turl: 'lms.lms.api.delete_documents',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoctype: 'LMS Quiz Question',\n\t\t\tdocuments: values.questions,\n\t\t}\n\t},\n})\n\nconst deleteQuestions = (selections, unselectAll) => {\n\tdeleteQuestionResource.submit(\n\t\t{\n\t\t\tquestions: Array.from(selections),\n\t\t},\n\t\t{\n\t\t\tonSuccess() {\n\t\t\t\ttoast.success(__('Questions deleted successfully'))\n\t\t\t\tquizDetails.reload()\n\t\t\t\tunselectAll()\n\t\t\t},\n\t\t}\n\t)\n}\n\nconst breadcrumbs = computed(() => {\n\tlet crumbs = [\n\t\t{\n\t\t\tlabel: __('Quizzes'),\n\t\t\troute: {\n\t\t\t\tname: 'Quizzes',\n\t\t\t},\n\t\t},\n\t]\n\n\tcrumbs.push({\n\t\tlabel: props.quizID == 'new' ? __('New Quiz') : quizDetails.data?.title,\n\t\troute: { name: 'QuizForm', params: { quizID: props.quizID } },\n\t})\n\treturn crumbs\n})\n\nusePageMeta(() => {\n\treturn {\n\t\ttitle: props.quizID == 'new' ? __('New Quiz') : quizDetails.data?.title,\n\t\ticon: brand.favicon,\n\t}\n})\n</script>\n"],"names":["show","_useModel","__props","quiz","chooseFromExisting","ref","editMode","user","inject","updateOnboardingStep","useOnboarding","existingQuestion","reactive","question","populateFields","fields","counter","field","props","questionData","createResource","data","key","watch","questionRow","values","questionCreation","submitQuestion","_a","updateQuestion","addQuestion","addQuestionRow","err","toast","questionUpdate","marksUpdate","brand","sessionStore","showQuestionModal","currentQuestion","router","useRouter","readOnlyMode","onMounted","_b","quizDetails","keyboardShortcut","submitQuiz","onBeforeUnmount","newVal","checkboxes","idx","quizCreate","quizUpdate","calculateTotalMarks","updateQuiz","createQuiz","totalMarks","questionColumns","computed","openQuestionModal","deleteQuestionResource","deleteQuestions","selections","unselectAll","breadcrumbs","crumbs","usePageMeta"],"mappings":"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"}