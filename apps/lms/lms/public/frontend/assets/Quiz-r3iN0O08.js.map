{"version":3,"file":"Quiz-r3iN0O08.js","sources":["../../../../frontend/src/components/Quiz.vue"],"sourcesContent":["<template>\n\t<div v-if=\"quiz.data\">\n\t\t<div\n\t\t\tclass=\"bg-surface-blue-2 space-y-1 py-2 px-2 mb-4 rounded-md text-sm text-ink-blue-3\"\n\t\t>\n\t\t\t<div class=\"leading-5\">\n\t\t\t\t{{\n\t\t\t\t\t__('This quiz consists of {0} questions.').format(questions.length)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t\t<div v-if=\"quiz.data?.duration\" class=\"leading-5\">\n\t\t\t\t{{\n\t\t\t\t\t__(\n\t\t\t\t\t\t'Please ensure that you complete all the questions in {0} minutes.'\n\t\t\t\t\t).format(quiz.data.duration)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t\t<div v-if=\"quiz.data?.duration\" class=\"leading-5\">\n\t\t\t\t{{\n\t\t\t\t\t__(\n\t\t\t\t\t\t'If you fail to do so, the quiz will be automatically submitted when the timer ends.'\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t\t<div v-if=\"quiz.data.passing_percentage\" class=\"leading-relaxed\">\n\t\t\t\t{{\n\t\t\t\t\t__(\n\t\t\t\t\t\t'You will have to get {0}% correct answers in order to pass the quiz.'\n\t\t\t\t\t).format(quiz.data.passing_percentage)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t\t<div v-if=\"quiz.data.max_attempts\" class=\"leading-5\">\n\t\t\t\t{{\n\t\t\t\t\t__('You can attempt this quiz {0}.').format(\n\t\t\t\t\t\tquiz.data.max_attempts == 1\n\t\t\t\t\t\t\t? '1 time'\n\t\t\t\t\t\t\t: `${quiz.data.max_attempts} times`\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div v-if=\"quiz.data.duration\" class=\"flex flex-col space-x-1 my-4\">\n\t\t\t<div class=\"mb-2\">\n\t\t\t\t<span class=\"\"> {{ __('Time') }}: </span>\n\t\t\t\t<span class=\"font-semibold\">\n\t\t\t\t\t{{ formatTimer(timer) }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ProgressBar :progress=\"timerProgress\" />\n\t\t</div>\n\n\t\t<div v-if=\"activeQuestion == 0\">\n\t\t\t<div class=\"border text-center p-20 rounded-md\">\n\t\t\t\t<div class=\"font-semibold text-lg text-ink-gray-9\">\n\t\t\t\t\t{{ quiz.data.title }}\n\t\t\t\t</div>\n\t\t\t\t<Button\n\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t!quiz.data.max_attempts ||\n\t\t\t\t\t\tattempts.data?.length < quiz.data.max_attempts\n\t\t\t\t\t\"\n\t\t\t\t\t@click=\"startQuiz\"\n\t\t\t\t\tclass=\"mt-2\"\n\t\t\t\t>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{{ __('Start') }}\n\t\t\t\t\t</span>\n\t\t\t\t</Button>\n\t\t\t\t<div v-else class=\"leading-5 text-ink-gray-7\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'You have already exceeded the maximum number of attempts allowed for this quiz.'\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else-if=\"!quizSubmission.data\">\n\t\t\t<div v-for=\"(question, qtidx) in questions\">\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"qtidx == activeQuestion - 1 && questionDetails.data\"\n\t\t\t\t\tclass=\"border rounded-md p-5\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t\t<div class=\"text-sm text-ink-gray-5\">\n\t\t\t\t\t\t\t<span class=\"mr-2\">\n\t\t\t\t\t\t\t\t{{ __('Question {0}').format(activeQuestion) }}:\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{ getInstructions(questionDetails.data) }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"text-ink-gray-9 text-sm font-semibold item-left\">\n\t\t\t\t\t\t\t{{ question.marks }}\n\t\t\t\t\t\t\t{{ question.marks == 1 ? __('Mark') : __('Marks') }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"text-ink-gray-9 font-semibold mt-2 leading-5\"\n\t\t\t\t\t\tv-html=\"questionDetails.data.question\"\n\t\t\t\t\t></div>\n\t\t\t\t\t<div v-if=\"questionDetails.data.type == 'Choices'\" v-for=\"index in 4\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tv-if=\"questionDetails.data[`option_${index}`]\"\n\t\t\t\t\t\t\tclass=\"flex items-center bg-surface-gray-3 rounded-md p-3 mt-4 w-full cursor-pointer focus:border-blue-600\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tv-if=\"!showAnswers.length && !questionDetails.data.multiple\"\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t:name=\"encodeURIComponent(questionDetails.data.question)\"\n\t\t\t\t\t\t\t\tclass=\"w-3.5 h-3.5 text-ink-gray-9 focus:ring-outline-gray-modals\"\n\t\t\t\t\t\t\t\t@change=\"markAnswer(index)\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tv-else-if=\"!showAnswers.length && questionDetails.data.multiple\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t:name=\"encodeURIComponent(questionDetails.data.question)\"\n\t\t\t\t\t\t\t\tclass=\"w-3.5 h-3.5 text-ink-gray-9 rounded-sm focus:ring-outline-gray-modals\"\n\t\t\t\t\t\t\t\t@change=\"markAnswer(index)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tv-else-if=\"quiz.data.show_answers\"\n\t\t\t\t\t\t\t\tv-for=\"(answer, idx) in showAnswers\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div v-if=\"index - 1 == idx\">\n\t\t\t\t\t\t\t\t\t<CheckCircle\n\t\t\t\t\t\t\t\t\t\tv-if=\"answer == 1\"\n\t\t\t\t\t\t\t\t\t\tclass=\"w-4 h-4 text-ink-green-2\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<MinusCircle\n\t\t\t\t\t\t\t\t\t\tv-else-if=\"answer == 2\"\n\t\t\t\t\t\t\t\t\t\tclass=\"w-4 h-4 text-ink-green-2\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<XCircle\n\t\t\t\t\t\t\t\t\t\tv-else-if=\"answer == 0\"\n\t\t\t\t\t\t\t\t\t\tclass=\"w-4 h-4 text-ink-red-3\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<MinusCircle v-else class=\"w-4 h-4\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclass=\"ml-2\"\n\t\t\t\t\t\t\t\tv-html=\"questionDetails.data[`option_${index}`]\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tv-if=\"questionDetails.data[`explanation_${index}`]\"\n\t\t\t\t\t\t\tclass=\"mt-2 text-xs\"\n\t\t\t\t\t\t\tv-show=\"showAnswers.length\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ questionDetails.data[`explanation_${index}`] }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else-if=\"questionDetails.data.type == 'User Input'\">\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tv-model=\"possibleAnswer\"\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t:disabled=\"showAnswers.length ? true : false\"\n\t\t\t\t\t\t\tclass=\"my-2\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div v-if=\"showAnswers.length\">\n\t\t\t\t\t\t\t<Badge v-if=\"showAnswers[0]\" :label=\"__('Correct')\" theme=\"green\">\n\t\t\t\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t\t\t\t<CheckCircle class=\"w-4 h-4 text-ink-green-2 mr-1\" />\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t<Badge v-else theme=\"red\" :label=\"__('Incorrect')\">\n\t\t\t\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t\t\t\t<XCircle class=\"w-4 h-4 text-ink-red-3 mr-1\" />\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else>\n\t\t\t\t\t\t<TextEditor\n\t\t\t\t\t\t\tclass=\"mt-4\"\n\t\t\t\t\t\t\t:content=\"possibleAnswer\"\n\t\t\t\t\t\t\t@change=\"(val) => (possibleAnswer = val)\"\n\t\t\t\t\t\t\t:editable=\"true\"\n\t\t\t\t\t\t\t:fixedMenu=\"true\"\n\t\t\t\t\t\t\teditorClass=\"prose-sm max-w-none border-b border-x bg-surface-gray-2 rounded-b-md py-1 px-2 min-h-[7rem]\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex items-center justify-between mt-4\">\n\t\t\t\t\t\t<div class=\"text-sm text-ink-gray-5\">\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t__('Question {0} of {1}').format(\n\t\t\t\t\t\t\t\t\tactiveQuestion,\n\t\t\t\t\t\t\t\t\tquestions.length\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t\t\tquiz.data.show_answers &&\n\t\t\t\t\t\t\t\t!showAnswers.length &&\n\t\t\t\t\t\t\t\tquestionDetails.data.type != 'Open Ended'\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t@click=\"checkAnswer()\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{ __('Check') }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tv-else-if=\"activeQuestion != questions.length\"\n\t\t\t\t\t\t\t@click=\"nextQuestion()\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{ __('Next') }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button v-else @click=\"submitQuiz()\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{ __('Submit') }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else class=\"border rounded-md p-20 text-center space-y-2\">\n\t\t\t<div class=\"text-lg font-semibold text-ink-gray-9\">\n\t\t\t\t{{ __('Quiz Summary') }}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-if=\"quizSubmission.data.is_open_ended\"\n\t\t\t\tclass=\"leading-5 text-ink-gray-7\"\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\t__(\n\t\t\t\t\t\t\"Your submission has been successfully saved. The instructor will review and grade it shortly, and you'll be notified of your final result.\"\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t\t<div v-else>\n\t\t\t\t{{\n\t\t\t\t\t__(\n\t\t\t\t\t\t'You got {0}% correct answers with a score of {1} out of {2}'\n\t\t\t\t\t).format(\n\t\t\t\t\t\tMath.ceil(quizSubmission.data.percentage),\n\t\t\t\t\t\tquizSubmission.data.score,\n\t\t\t\t\t\tquizSubmission.data.score_out_of\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t\t<Button\n\t\t\t\t@click=\"resetQuiz()\"\n\t\t\t\tclass=\"mt-2\"\n\t\t\t\tv-if=\"\n\t\t\t\t\t!quiz.data.max_attempts ||\n\t\t\t\t\tattempts?.data.length < quiz.data.max_attempts\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t{{ __('Try Again') }}\n\t\t\t\t</span>\n\t\t\t</Button>\n\t\t</div>\n\t\t<div\n\t\t\tv-if=\"\n\t\t\t\tquiz.data.show_submission_history &&\n\t\t\t\tattempts?.data &&\n\t\t\t\tattempts.data.length > 0\n\t\t\t\"\n\t\t\tclass=\"mt-10\"\n\t\t>\n\t\t\t<ListView\n\t\t\t\t:columns=\"getSubmissionColumns()\"\n\t\t\t\t:rows=\"attempts?.data\"\n\t\t\t\trow-key=\"name\"\n\t\t\t\t:options=\"{\n\t\t\t\t\tselectable: false,\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\temptyState: { title: __('No Quiz submissions found') },\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t</ListView>\n\t\t</div>\n\t</div>\n</template>\n<script setup>\nimport {\n\tBadge,\n\tButton,\n\tcall,\n\tcreateResource,\n\tListView,\n\tTextEditor,\n\tFormControl,\n\ttoast,\n} from 'frappe-ui'\nimport { ref, watch, reactive, inject, computed } from 'vue'\nimport { CheckCircle, XCircle, MinusCircle } from 'lucide-vue-next'\nimport { timeAgo } from '@/utils'\nimport { useRouter } from 'vue-router'\nimport ProgressBar from '@/components/ProgressBar.vue'\n\nconst user = inject('$user')\nconst activeQuestion = ref(0)\nconst currentQuestion = ref('')\nconst selectedOptions = reactive([0, 0, 0, 0])\nconst showAnswers = reactive([])\nlet questions = reactive([])\nconst possibleAnswer = ref(null)\nconst timer = ref(0)\nlet timerInterval = null\nconst router = useRouter()\n\nconst props = defineProps({\n\tquizName: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n})\n\nconst quiz = createResource({\n\turl: 'frappe.client.get',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoctype: 'LMS Quiz',\n\t\t\tname: props.quizName,\n\t\t}\n\t},\n\tcache: ['quiz', props.quizName],\n\tauto: true,\n\ttransform(data) {\n\t\tdata.duration = parseInt(data.duration)\n\t},\n\tonSuccess(data) {\n\t\tpopulateQuestions()\n\t\tsetupTimer()\n\t},\n})\n\nconst populateQuestions = () => {\n\tlet data = quiz.data\n\tif (data.shuffle_questions) {\n\t\tquestions = shuffleArray(data.questions)\n\t\tif (data.limit_questions_to) {\n\t\t\tquestions = questions.slice(0, data.limit_questions_to)\n\t\t}\n\t} else {\n\t\tquestions = data.questions\n\t}\n}\n\nconst setupTimer = () => {\n\tif (quiz.data.duration) {\n\t\ttimer.value = quiz.data.duration * 60\n\t}\n}\n\nconst startTimer = () => {\n\ttimerInterval = setInterval(() => {\n\t\ttimer.value--\n\t\tif (timer.value == 0) {\n\t\t\tclearInterval(timerInterval)\n\t\t\tsubmitQuiz()\n\t\t}\n\t}, 1000)\n}\n\nconst formatTimer = (seconds) => {\n\tconst hrs = Math.floor(seconds / 3600)\n\t\t.toString()\n\t\t.padStart(2, '0')\n\tconst mins = Math.floor((seconds % 3600) / 60)\n\t\t.toString()\n\t\t.padStart(2, '0')\n\tconst secs = (seconds % 60).toString().padStart(2, '0')\n\treturn hrs != '00' ? `${hrs}:${mins}:${secs}` : `${mins}:${secs}`\n}\n\nconst timerProgress = computed(() => {\n\treturn (timer.value / (quiz.data.duration * 60)) * 100\n})\n\nconst shuffleArray = (array) => {\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1))\n\t\t;[array[i], array[j]] = [array[j], array[i]]\n\t}\n\treturn array\n}\n\nconst attempts = createResource({\n\turl: 'frappe.client.get_list',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoctype: 'LMS Quiz Submission',\n\t\t\tfilters: {\n\t\t\t\tmember: user.data?.name,\n\t\t\t\tquiz: quiz.data?.name,\n\t\t\t},\n\t\t\tfields: [\n\t\t\t\t'name',\n\t\t\t\t'creation',\n\t\t\t\t'score',\n\t\t\t\t'score_out_of',\n\t\t\t\t'percentage',\n\t\t\t\t'passing_percentage',\n\t\t\t],\n\t\t\torder_by: 'creation desc',\n\t\t}\n\t},\n\ttransform(data) {\n\t\tdata.forEach((submission, index) => {\n\t\t\tsubmission.creation = timeAgo(submission.creation)\n\t\t\tsubmission.idx = index + 1\n\t\t})\n\t},\n})\n\nwatch(\n\t() => quiz.data,\n\t() => {\n\t\tif (quiz.data) {\n\t\t\tpopulateQuestions()\n\t\t}\n\t\tif (quiz.data && quiz.data.max_attempts) {\n\t\t\tattempts.reload()\n\t\t\tresetQuiz()\n\t\t}\n\t}\n)\n\nconst quizSubmission = createResource({\n\turl: 'lms.lms.doctype.lms_quiz.lms_quiz.quiz_summary',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tquiz: quiz.data.name,\n\t\t\tresults: localStorage.getItem(quiz.data.title),\n\t\t}\n\t},\n})\n\nconst questionDetails = createResource({\n\turl: 'lms.lms.utils.get_question_details',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tquestion: currentQuestion.value,\n\t\t}\n\t},\n})\n\nwatch(activeQuestion, (value) => {\n\tif (value > 0) {\n\t\tcurrentQuestion.value = quiz.data.questions[value - 1].question\n\t\tquestionDetails.reload()\n\t}\n})\n\nwatch(\n\t() => props.quizName,\n\t(newName) => {\n\t\tif (newName) {\n\t\t\tquiz.reload()\n\t\t}\n\t}\n)\n\nconst startQuiz = () => {\n\tactiveQuestion.value = 1\n\tlocalStorage.removeItem(quiz.data.title)\n\tif (quiz.data.duration) startTimer()\n}\n\nconst markAnswer = (index) => {\n\tif (!questionDetails.data.multiple)\n\t\tselectedOptions.splice(0, selectedOptions.length, ...[0, 0, 0, 0])\n\tselectedOptions[index - 1] = selectedOptions[index - 1] ? 0 : 1\n}\n\nconst getAnswers = () => {\n\tlet answers = []\n\tconst type = questionDetails.data.type\n\n\tif (type == 'Choices') {\n\t\tselectedOptions.forEach((value, index) => {\n\t\t\tif (selectedOptions[index])\n\t\t\t\tanswers.push(questionDetails.data[`option_${index + 1}`])\n\t\t})\n\t} else {\n\t\tanswers.push(possibleAnswer.value)\n\t}\n\n\treturn answers\n}\n\nconst checkAnswer = () => {\n\tlet answers = getAnswers()\n\tif (!answers.length) {\n\t\ttoast.warning(__('Please select an option'))\n\t\treturn\n\t}\n\n\tcreateResource({\n\t\turl: 'lms.lms.doctype.lms_quiz.lms_quiz.check_answer',\n\t\tparams: {\n\t\t\tquestion: currentQuestion.value,\n\t\t\ttype: questionDetails.data.type,\n\t\t\tanswers: JSON.stringify(answers),\n\t\t},\n\t\tauto: true,\n\t\tonSuccess(data) {\n\t\t\tlet type = questionDetails.data.type\n\t\t\tif (type == 'Choices') {\n\t\t\t\tselectedOptions.forEach((option, index) => {\n\t\t\t\t\tif (option) {\n\t\t\t\t\t\tshowAnswers[index] = option && data[index]\n\t\t\t\t\t} else if (data[index] == 2) {\n\t\t\t\t\t\tshowAnswers[index] = 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowAnswers[index] = undefined\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tshowAnswers.push(data)\n\t\t\t}\n\t\t\taddToLocalStorage()\n\t\t\tif (!quiz.data.show_answers) {\n\t\t\t\tresetQuestion()\n\t\t\t}\n\t\t},\n\t})\n}\n\nconst addToLocalStorage = () => {\n\tlet quizData = JSON.parse(localStorage.getItem(quiz.data.title))\n\tlet questionData = {\n\t\tquestion_name: currentQuestion.value,\n\t\tanswer: getAnswers().join(),\n\t\tis_correct: showAnswers.filter((answer) => {\n\t\t\treturn answer != undefined\n\t\t}),\n\t}\n\tquizData ? quizData.push(questionData) : (quizData = [questionData])\n\tlocalStorage.setItem(quiz.data.title, JSON.stringify(quizData))\n}\n\nconst nextQuestion = () => {\n\tif (!quiz.data.show_answers && questionDetails.data?.type != 'Open Ended') {\n\t\tcheckAnswer()\n\t} else {\n\t\tif (questionDetails.data?.type == 'Open Ended') addToLocalStorage()\n\t\tresetQuestion()\n\t}\n}\n\nconst resetQuestion = () => {\n\tif (activeQuestion.value == quiz.data.questions.length) return\n\tactiveQuestion.value = activeQuestion.value + 1\n\tselectedOptions.splice(0, selectedOptions.length, ...[0, 0, 0, 0])\n\tshowAnswers.length = 0\n\tpossibleAnswer.value = null\n}\n\nconst submitQuiz = () => {\n\tif (!quiz.data.show_answers) {\n\t\tif (questionDetails.data.type == 'Open Ended') addToLocalStorage()\n\t\telse checkAnswer()\n\t\tsetTimeout(() => {\n\t\t\tcreateSubmission()\n\t\t}, 500)\n\t\treturn\n\t}\n\tcreateSubmission()\n}\n\nconst createSubmission = () => {\n\tquizSubmission.submit(\n\t\t{},\n\t\t{\n\t\t\tonSuccess(data) {\n\t\t\t\tmarkLessonProgress()\n\t\t\t\tif (quiz.data && quiz.data.max_attempts) attempts.reload()\n\t\t\t\tif (quiz.data.duration) clearInterval(timerInterval)\n\t\t\t},\n\t\t\tonError(err) {\n\t\t\t\tconst errorTitle = err?.message || ''\n\t\t\t\tif (errorTitle.includes('MaximumAttemptsExceededError')) {\n\t\t\t\t\tconst errorMessage = err.messages?.[0] || err\n\t\t\t\t\ttoast.error(__(errorMessage))\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t}, 3000)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t)\n}\n\nconst resetQuiz = () => {\n\tactiveQuestion.value = 0\n\tselectedOptions.splice(0, selectedOptions.length, ...[0, 0, 0, 0])\n\tshowAnswers.length = 0\n\tquizSubmission.reset()\n\tpopulateQuestions()\n\tsetupTimer()\n}\n\nconst getInstructions = (question) => {\n\tif (question.type == 'Choices')\n\t\tif (question.multiple) return __('Choose all answers that apply')\n\t\telse return __('Choose one answer')\n\telse return __('Type your answer')\n}\n\nconst markLessonProgress = () => {\n\tif (router.currentRoute.value.name == 'Lesson') {\n\t\tcall('lms.lms.api.mark_lesson_progress', {\n\t\t\tcourse: router.currentRoute.value.params.courseName,\n\t\t\tchapter_number: router.currentRoute.value.params.chapterNumber,\n\t\t\tlesson_number: router.currentRoute.value.params.lessonNumber,\n\t\t})\n\t}\n}\n\nconst getSubmissionColumns = () => {\n\treturn [\n\t\t{\n\t\t\tlabel: 'No.',\n\t\t\tkey: 'idx',\n\t\t},\n\t\t{\n\t\t\tlabel: 'Date',\n\t\t\tkey: 'creation',\n\t\t},\n\t\t{\n\t\t\tlabel: 'Score',\n\t\t\tkey: 'score',\n\t\t\talign: 'center',\n\t\t},\n\t\t{\n\t\t\tlabel: 'Score out of',\n\t\t\tkey: 'score_out_of',\n\t\t\talign: 'center',\n\t\t},\n\t\t{\n\t\t\tlabel: 'Percentage',\n\t\t\tkey: 'percentage',\n\t\t\talign: 'center',\n\t\t},\n\t]\n}\n</script>\n<style>\np {\n\tline-height: 1.5rem;\n}\n</style>\n"],"names":["user","inject","activeQuestion","ref","currentQuestion","selectedOptions","reactive","showAnswers","questions","possibleAnswer","timer","timerInterval","router","useRouter","props","__props","quiz","createResource","values","data","populateQuestions","setupTimer","shuffleArray","startTimer","submitQuiz","formatTimer","seconds","hrs","mins","secs","timerProgress","computed","array","i","j","attempts","_a","_b","submission","index","timeAgo","watch","resetQuiz","quizSubmission","questionDetails","value","newName","startQuiz","markAnswer","getAnswers","answers","checkAnswer","toast","option","addToLocalStorage","resetQuestion","quizData","questionData","answer","nextQuestion","createSubmission","markLessonProgress","err","errorMessage","getInstructions","question","call","getSubmissionColumns"],"mappings":"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"}