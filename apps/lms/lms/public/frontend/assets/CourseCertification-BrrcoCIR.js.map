{"version":3,"file":"CourseCertification-BrrcoCIR.js","sources":["../../../../frontend/src/pages/CourseCertification.vue"],"sourcesContent":["<template>\n\t<header\n\t\tclass=\"sticky top-0 z-10 flex items-center justify-between border-b bg-surface-white px-3 py-2.5 sm:px-5\"\n\t>\n\t\t<Breadcrumbs class=\"h-7\" :items=\"breadcrumbs\" />\n\t</header>\n\t<div class=\"p-5\">\n\t\t<div v-if=\"certificate.data && Object.keys(certificate.data).length\">\n\t\t\t<div class=\"text-lg text-ink-gray-9 font-semibold mb-1\">\n\t\t\t\t{{ __('Certification') }}\n\t\t\t</div>\n\t\t\t<div class=\"text-ink-gray-9 text-sm\">\n\t\t\t\t{{\n\t\t\t\t\t__(\n\t\t\t\t\t\t'You are already certified for this course. Click on the card below to open your certificate.'\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass=\"border p-3 w-fit min-w-60 rounded-md space-y-2 hover:bg-surface-gray-1 cursor-pointer mt-5\"\n\t\t\t\t@click=\"openCertificate(certificate.data)\"\n\t\t\t>\n\t\t\t\t<div class=\"text-ink-gray-9 font-semibold\">\n\t\t\t\t\t{{ courseTitle }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-sm text-ink-gray-7 font-medium\">\n\t\t\t\t\t{{ __('Issued On') }}:\n\t\t\t\t\t{{ dayjs(certificate.data.issue_date).format('DD MMM YYYY') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else>\n\t\t\t<UpcomingEvaluations v-if=\"courses.length\" :courses=\"courses\" />\n\t\t</div>\n\t</div>\n</template>\n<script setup>\nimport { computed, inject, onMounted, ref } from 'vue'\nimport { Breadcrumbs, call, createResource, usePageMeta } from 'frappe-ui'\nimport { useRouter } from 'vue-router'\nimport { sessionStore } from '../stores/session'\nimport UpcomingEvaluations from '@/components/UpcomingEvaluations.vue'\n\nconst courseTitle = ref(null)\nconst evaluator = ref(null)\nconst { brand } = sessionStore()\nconst courses = ref([])\nconst user = inject('$user')\nconst dayjs = inject('$dayjs')\nconst router = useRouter()\n\nconst props = defineProps({\n\tcourseName: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n})\n\nonMounted(() => {\n\tfetchEnrollmentDetails()\n\tfetchCourseDetails()\n})\n\nconst certificate = createResource({\n\turl: 'frappe.client.get_value',\n\tparams: {\n\t\tdoctype: 'LMS Certificate',\n\t\tfilters: {\n\t\t\tmember: user.data?.name,\n\t\t\tcourse: props.courseName,\n\t\t},\n\t\tfieldname: ['name', 'template', 'issue_date'],\n\t},\n\tcache: [user.data?.name, props.courseName],\n})\n\nconst fetchEnrollmentDetails = () => {\n\tcall('frappe.client.get_value', {\n\t\tdoctype: 'LMS Enrollment',\n\t\tfilters: { member: user.data?.name, course: props.courseName },\n\t\tfieldname: ['purchased_certificate'],\n\t}).then((data) => {\n\t\tif (data.purchased_certificate) {\n\t\t\tcertificate.reload()\n\t\t} else {\n\t\t\trouter.push({\n\t\t\t\tname: 'CourseDetail',\n\t\t\t\tparams: { courseName: props.courseName },\n\t\t\t})\n\t\t}\n\t})\n}\n\nconst fetchCourseDetails = () => {\n\tcall('frappe.client.get_value', {\n\t\tdoctype: 'LMS Course',\n\t\tfilters: { name: props.courseName },\n\t\tfieldname: ['title', 'evaluator'],\n\t}).then((data) => {\n\t\tcourseTitle.value = data.title\n\t\tevaluator.value = data.evaluator\n\t\tpopulateCourses()\n\t})\n}\n\nconst populateCourses = () => {\n\tcourses.value = [\n\t\t{\n\t\t\tcourse: props.courseName,\n\t\t\ttitle: courseTitle.value,\n\t\t\tevaluator: evaluator.value,\n\t\t},\n\t]\n}\n\nconst openCertificate = (certificate) => {\n\twindow.open(\n\t\t`/api/method/frappe.utils.print_format.download_pdf?doctype=LMS+Certificate&name=${\n\t\t\tcertificate.name\n\t\t}&format=${encodeURIComponent(certificate.template)}`,\n\t\t'_blank'\n\t)\n}\n\nconst breadcrumbs = computed(() => [\n\t{\n\t\tlabel: __('Courses'),\n\t\troute: { name: 'Courses' },\n\t},\n\t{\n\t\tlabel: courseTitle.value,\n\t\troute: { name: 'CourseDetail', params: { courseName: props.courseName } },\n\t},\n\t{\n\t\tlabel: __('Certification'),\n\t},\n])\n\nusePageMeta(() => {\n\treturn {\n\t\ttitle: courseTitle.value,\n\t\ticon: brand.favicon,\n\t}\n})\n</script>\n"],"names":["courseTitle","ref","evaluator","brand","sessionStore","courses","user","inject","dayjs","router","useRouter","props","__props","onMounted","fetchEnrollmentDetails","fetchCourseDetails","certificate","createResource","_a","_b","call","data","populateCourses","openCertificate","breadcrumbs","computed","usePageMeta"],"mappings":"ktBA2CA,MAAMA,EAAcC,EAAI,IAAI,EACtBC,EAAYD,EAAI,IAAI,EACpB,CAAE,MAAAE,CAAO,EAAGC,EAAY,EACxBC,EAAUJ,EAAI,CAAE,CAAA,EAChBK,EAAOC,EAAO,OAAO,EACrBC,EAAQD,EAAO,QAAQ,EACvBE,EAASC,EAAS,EAElBC,EAAQC,EAOdC,EAAU,IAAM,CACfC,EAAsB,EACtBC,EAAkB,CACnB,CAAC,EAED,MAAMC,EAAcC,EAAe,CAClC,IAAK,0BACL,OAAQ,CACP,QAAS,kBACT,QAAS,CACR,QAAQC,EAAAZ,EAAK,OAAL,YAAAY,EAAW,KACnB,OAAQP,EAAM,UACd,EACD,UAAW,CAAC,OAAQ,WAAY,YAAY,CAC5C,EACD,MAAO,EAACQ,EAAAb,EAAK,OAAL,YAAAa,EAAW,KAAMR,EAAM,UAAU,CAC1C,CAAC,EAEKG,EAAyB,IAAM,OACpCM,EAAK,0BAA2B,CAC/B,QAAS,iBACT,QAAS,CAAE,QAAQF,EAAAZ,EAAK,OAAL,YAAAY,EAAW,KAAM,OAAQP,EAAM,UAAY,EAC9D,UAAW,CAAC,uBAAuB,CACrC,CAAE,EAAE,KAAMU,GAAS,CACbA,EAAK,sBACRL,EAAY,OAAM,EAElBP,EAAO,KAAK,CACX,KAAM,eACN,OAAQ,CAAE,WAAYE,EAAM,UAAY,CACxC,CAAA,CAEF,CAAA,CACF,EAEMI,EAAqB,IAAM,CAChCK,EAAK,0BAA2B,CAC/B,QAAS,aACT,QAAS,CAAE,KAAMT,EAAM,UAAY,EACnC,UAAW,CAAC,QAAS,WAAW,CAClC,CAAE,EAAE,KAAMU,GAAS,CACjBrB,EAAY,MAAQqB,EAAK,MACzBnB,EAAU,MAAQmB,EAAK,UACvBC,EAAe,CACf,CAAA,CACF,EAEMA,EAAkB,IAAM,CAC7BjB,EAAQ,MAAQ,CACf,CACC,OAAQM,EAAM,WACd,MAAOX,EAAY,MACnB,UAAWE,EAAU,KACrB,CACH,CACA,EAEMqB,EAAmBP,GAAgB,CACxC,OAAO,KACN,mFACCA,EAAY,IACZ,WAAU,mBAAmBA,EAAY,QAAQ,CAAC,GACnD,QACF,CACA,EAEMQ,EAAcC,EAAS,IAAM,CAClC,CACC,MAAO,GAAG,SAAS,EACnB,MAAO,CAAE,KAAM,SAAW,CAC1B,EACD,CACC,MAAOzB,EAAY,MACnB,MAAO,CAAE,KAAM,eAAgB,OAAQ,CAAE,WAAYW,EAAM,WAAc,CACzE,EACD,CACC,MAAO,GAAG,eAAe,CACzB,CACF,CAAC,EAED,OAAAe,EAAY,KACJ,CACN,MAAO1B,EAAY,MACnB,KAAMG,EAAM,OACd,EACC"}